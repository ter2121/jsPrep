
CLI
  Node.js has an API called readline that lets JavaScript programs read input from the command line. However, the API isn't straightforward or simple: it requires an understanding of asynchronous programming and higher-order functions. We don't explore these concepts in this book. For now, we can use a simplified version of the readline library called readline-sync.

Input in the Browser
  Browsers provide an environment that differs radically from that of Node.js: browser users must interact with JavaScript programs in an entirely different way. Real-world browser applications let users click on buttons, enter text, select checkboxes and radio buttons, and even adjust sliders. These actions provide input to the application, which then performs work in response, such as changing the page content, sending data to a database, or displaying some additional content.

  Working with a browser's input controls requires a working knowledge of the Document Object Model (DOM), which is outside the scope of this book. However, you don't need to know about the DOM to get user inputs. Most browsers implement the prompt function which lets a program ask for and obtain text-based input from the user.